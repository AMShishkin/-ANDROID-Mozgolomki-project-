package com.project.golovolomki.Assistants;

import android.content.ContentValues;
import android.database.sqlite.SQLiteOpenHelper;
import android.database.sqlite.SQLiteDatabase;
import android.content.Context;
import android.database.Cursor;
import com.project.golovolomki.R;
import java.util.ArrayList;

/* table PuzzleTable structure
+--------+------------+-----------------+----------+------------+------------+----------------+----------+
|- 0 id -|- 1 header -|- 2 description -|- 3 text -|- 4 advice -|- 5 answer -|- 6 complexity -|- 7 wiki -|
+--------+------------+-----------------+----------+------------+------------+----------------+----------+

1 - title puzzle
2 - description for main list view
3 - main text
4 - advice puzzle
5 - answer puzzle
6 - complexity (* - easy, ** - normal, *** - hard)
7 - path to wiki
*/

/* table SettingsTable structure
+--------+---------------+--------------+-------------+----------+-----------------+----------------+------------+----------------+---------------+---------------+
|- 0 id -|- 1 lastIndex -|- 2 appStart -|- 3 dbindex -|- 4 toUp -|- 5 doubleClick -|- 6 moveToLast -|- 7 isRate -|- 8 toNextRate -|- 9 textAlign -|- 10 textSize -|
+--------+---------------+--------------+-------------+----------+-----------------+----------------+------------+----------------+---------------+---------------+

1 - index of the last shown puzzle
2 - count starting app
3 - current version db
4 - flag sorting main list view
5 - duplicate action !!! - NOT USED - !!!
6 - show last puzzle on start app
7 - rate flag
8 - count to next show rating dialog
9 - text align left-center
10 - text size
*/

/* table Favorite structure
+--------+--------------+-----------+
|- 0 id -|- 1 favorite -|- 2 state -|
+--------+---------------+----------+

1 - index favorite puzzle
2 - state closing puzzle
*/



public class DatabaseHelper extends SQLiteOpenHelper {

    private static final String  DATABASE_NAME       = "Puzzle.db";

    @SuppressWarnings("!!! D.B. VERSION !!!")
    public static final int      SCHEMA              = 8;


    public static final String   TABLE_NAME_PUZZLE   = "PuzzleTable",
                                 TABLE_NAME_SETTINGS = "SettingsTable",
                                 TABLE_NAME_FAVORITE = "FavoriteTable";

    private ContentValues        contentValues;

    // column names
    public static final String
            COLUMN_ID                   = "id",
            COLUMN_HEADER               = "header",
            COLUMN_DESCRIPTION          = "description",
            COLUMN_TEXT                 = "text",
            COLUMN_ADVICE               = "advice",
            COLUMN_ANSWER               = "answer",
            COLUMN_COMPLEXITY           = "complexity",
            COLUMN_WIKI                 = "wiki",

            COLUMN_SETTINGS_ID          = "id",
            COLUMN_SETTINGS_LASTINDEX   = "lastIndex",
            COLUMN_SETTINGS_APPSTART    = "appStart",
            COLUMN_SETTINGS_DBINDEX     = "dbindex",
            COLUMN_SETTINGS_TOUP        = "toup",
            COLUMN_SETTINGS_DOUBLECLICK = "doubleClick",
            COLUMN_SETTINGS_MOVETOLAST  = "moveToLast",
            COLUMN_SETTINGS_ISRATE      = "isRate",
            COLUMN_SETTINGS_TONEXTRATE  = "toNextRate",
            COLUMN_SETTINGS_TEXTALIGN   = "textAlign",
            COLUMN_SETTINGS_TEXTSIZE    = "textSize",

            COLUMN_FAVORITE_ID          = "id",
            COLUMN_FAVORITE_FAVORITE    = "favorite",
            COLUMN_FAVORITE_STATE       = "state";



    public static Cursor valueCursor, settingsCursor, favoriteCursor;

    public static ArrayList<Integer> listImages = new ArrayList<Integer>();




    public DatabaseHelper(Context context) {
        super(context, DATABASE_NAME, null, SCHEMA);

        InitializeImages();
    }

    public void InitializeImages() {
        listImages.add(R.drawable.img0); listImages.add(R.drawable.img1); listImages.add(R.drawable.img2); listImages.add(R.drawable.img3); listImages.add(R.drawable.img4);
        listImages.add(R.drawable.img5); listImages.add(R.drawable.img6); listImages.add(R.drawable.img7); listImages.add(R.drawable.img8); listImages.add(R.drawable.img9);
        listImages.add(R.drawable.img10); listImages.add(R.drawable.img11); listImages.add(R.drawable.img12); listImages.add(R.drawable.img13); listImages.add(R.drawable.img14);
        listImages.add(R.drawable.img15); listImages.add(R.drawable.img16); listImages.add(R.drawable.img17); listImages.add(R.drawable.img18); listImages.add(R.drawable.img19);
        listImages.add(R.drawable.img20); listImages.add(R.drawable.img21); listImages.add(R.drawable.img22); listImages.add(R.drawable.img23); listImages.add(R.drawable.img24);
        listImages.add(R.drawable.img25); listImages.add(R.drawable.img26); listImages.add(R.drawable.img27); listImages.add(R.drawable.img28); listImages.add(R.drawable.img29);
        listImages.add(R.drawable.img30); listImages.add(R.drawable.img31); listImages.add(R.drawable.img32); listImages.add(R.drawable.img33); listImages.add(R.drawable.img34);
        listImages.add(R.drawable.img35); listImages.add(R.drawable.img36); listImages.add(R.drawable.img37); listImages.add(R.drawable.img38); listImages.add(R.drawable.img39);
        listImages.add(R.drawable.img40);
    }

    public void InitializationSettingsTable(SQLiteDatabase db) {
        db.execSQL("INSERT INTO "
                + TABLE_NAME_SETTINGS           + " ("
                + COLUMN_SETTINGS_LASTINDEX     + ", "
                + COLUMN_SETTINGS_APPSTART      + ", "
                + COLUMN_SETTINGS_DBINDEX       + ", "
                + COLUMN_SETTINGS_TOUP          + ", "
                + COLUMN_SETTINGS_DOUBLECLICK   + ", "
                + COLUMN_SETTINGS_MOVETOLAST    + ", "
                + COLUMN_SETTINGS_ISRATE        + ", "
                + COLUMN_SETTINGS_TONEXTRATE    + ", "
                + COLUMN_SETTINGS_TEXTALIGN     + ", "
                + COLUMN_SETTINGS_TEXTSIZE      + ") "
                + "VALUES (0, 0, 1, 'true', 'true', 'false', 'false', 2, 'true', 'false');"); // WARNING! UPDATE DB INDEX
    }

    public void InitializationFavoriteTable(SQLiteDatabase db) {
        db.execSQL("INSERT INTO "
                + TABLE_NAME_FAVORITE       + " ("
                + COLUMN_FAVORITE_FAVORITE  + ", "
                + COLUMN_FAVORITE_STATE     + ") "
                + "VALUES ('', '');");
    }

    private void InsertDateIntoPuzzleTable(SQLiteDatabase db, String header, String description,
                                           String text, String advice, String answer,
                                           String complexity, String wiki) {
        db.execSQL("INSERT INTO "
                + TABLE_NAME_PUZZLE     + " ("
                + COLUMN_HEADER         + ", "
                + COLUMN_DESCRIPTION    + ", "
                + COLUMN_TEXT           + ", "
                + COLUMN_ADVICE         + ", "
                + COLUMN_ANSWER         + ", "
                + COLUMN_COMPLEXITY     + ", "
                + COLUMN_WIKI           + ") "
                + "VALUES ('"           + header
                + "', '"                + description
                + "', '"                + text
                + "', '"                + advice
                + "', '"                + answer
                + "', '"                + complexity
                + "', '"                + wiki
                + "');");

        db.execSQL("INSERT INTO "
                + TABLE_NAME_FAVORITE       + " ("
                + COLUMN_FAVORITE_FAVORITE  + ", "
                + COLUMN_FAVORITE_STATE     + ") "
                + "VALUES ('', '');");
    }


    public void InitializationPuzzleTable(SQLiteDatabase db) {
        // 1 - 5
        this.InsertDateIntoPuzzleTable(db, "НАЧАЛО", "\nCпасибо, что выбрали данное приложение!\nНе забудьте обязательно прочитать\nданный раздел...", "Добро пожаловать в приложение МОЗГОЛОМКИ - лучший в своем роде офлайн сборник загадок и головоломок со всего мира.\nВ данном сборнике Вы найдете сотни лучших головоломок и загадок, а также подсказки и ответы на них.\nДанное приложение не является игрой, здесь нет задачи непременно отгадать все загадки и узнать ответ на каждую головоломку.\nЗадачей данного приложения является заставить Вас размышлять, думать и анализировать при решении очередной загадки.\nНе спешите смотреть ответ, попробуйте подумать, тщательно прочитайте вопрос еще раз или воспользуйтесь подсказкой.\nПомните это!\n\nP.S. Надеюсь мое приложение будет полезным для Вас.\nЕсли Вам понравится данное приложение не забудьте оценить его и оставить отзыв.\nОценки и отзывы очень важны для меня, они помогают мне сделать приложении более качественным.\n\nОценить приложение можно на странице ПОМОЩЬ.\n\nХорошего настроения и удачи!", "\n\nВы можете проверить себя в любой момент, сверившись с ответом!\nНе спешите открывать данную страницу, попробуйте подумать еще раз, тщательно прочитайте загадаку или воспользуйтесь подсказкой.", "\n\nСложная загадка?\nВам поможет подсказка!\nНа данной странице Вы найдете подсказку для каждой головоломки.", "ВВОДНАЯ", "");
        this.InsertDateIntoPuzzleTable(db, "КАРТЫ", "\nГоловоломка про игральные карты,\nв которой нужно угадать масть\n и достоинство карт...", "Представьте, что перед вами лежат три карты «РУБАШКОЙ ВВЕРХ».\nУгадайте масть и достоинство у каждой из трех карт.\nЗная, что:\n1. Есть минимум одна\n «ТРОЙКА» справа от «ДВОЙКИ».\n2. Есть минимум одна\n «ТРЕФА» справа от «ТРЕФЫ».\n3. Есть минимум одна\n «ТРОЙКА» слева от «ТРОЙКИ».\n4. Есть минимум одна\n «ТРЕФА» слева от «БУБНЫ».", "\n\n1 - двойка треф.\n2 - тройка треф.\n3 - тройка бубен.", "\n\nПервой будет двойка треф.", "ЛЕГКАЯ", "Игральные_карты");
        this.InsertDateIntoPuzzleTable(db, "ПРОГУЛКА", "\nУтренняя прогулка может быть\nзахватывающей, если гулять по\nнеобычным местам...", "Как-то утром в понедельник один человек шел по Санкт-Петербургу пару километров и его никто не увидел.\nИ он не заметил ни единой живой души.\nБыло светло, мужчина все хорошо видел и вокруг и куда идет.\nВесь свой путь он прошел пешком.\nВ это время по городу продвигалось много людей недалеко от него.\nОднако, ни он никого, ни его никто не увидел.\n\nКак же так?", "\n\nОн шел по канализации.", "\n\nЭто есть в каждом крупном городе.\nЭто составная часть системы водоснабжения и водоотведения", "ТЯЖЕЛАЯ", "Канализация");
        this.InsertDateIntoPuzzleTable(db, "ГЛОБУС", "\nВ философии — это необратимое течение,\nпротекающее лишь в одном направлении - из прошлого, через настоящее в будущее...", "Большую часть марта\nв Киеве плюс 2,\nв Лондоне — ноль,\nа в Нью-Йорке минус 5.\n\nА сколько в марте в Хабаровске, если в июле там +11?", "\n\n+11.\nРечь идет о часовых поясах", "\n\nСмотри на глобус.\nВ России их всего 11.", "СРЕДНЯЯ", "Часовой_пояс");
        this.InsertDateIntoPuzzleTable(db, "ЭПИЗОД", "\nОдна из загадок самого длинный\nмультсериала в истории\nамериканского телевидения...", "В одном из эпизодов мультсериала «Симпсоны» Барт в присутствии китайских шпионов задается вопросом, может ли он предать свою страну, ведь он каждый день произносит клятву верности флагу США.\nВ ответ следует возражение, что клятва приносится не стране, а флагу, а флаг…\n\nЗакончите мысль шпионов тремя словами.",  "\n\nА флаг сделан в Китае.", "\n\nА флаг СДЕЛАН…", "ЛЕГКАЯ", "Симпсоны");
        // 6 - 10
        this.InsertDateIntoPuzzleTable(db, "ФРАЗА", "\nСовременная загадка по знаменитой фразе\nфранцузского летчика и писателя.\nЭту фразу слышал каждый...", "Одна из компаний, занимающихся выделенными линиями сети «ИНТЕРНЕТ», решила в своем рекламном слогане показать, что она заботится о своих ранее подключенных клиентах.\nДля этого компания изменила последнее слово в известной фразе известного летчика.\n\nВоспроизведите получившуюся фразу.", "\n\n«Мы в ответе за тех, кого подключили».\nКомпания — МТС.", "\n\nАвтор этой (изначальной) фразы французский писатель и опытный лётчик Антуан де Сент-Экзюпери\n(1900-1944)", "ТЯЖЕЛАЯ", "Сент-Экзюпери,_Антуан_де");
        this.InsertDateIntoPuzzleTable(db, "ИГРЫ", "\nИгра́ - вид осмысленной и непродуктивной\nдеятельности, где мотив лежит не в результате её,\n а в самом процессе...", "Название одной из этих игр является уменьшительной формой названия другой, хотя игры эти совершенно разные.\nПервую из них, в которую, наверное, играли многие из вас, можно отнести к жанру интеллектуальных.\nВо вторую некоторые из вас тоже вполне могли играть, хотя в последние годы она заметно утратила былую популярность.\n\nНазовите обе игры.", "\n\n«ГОРОДА» и «ГОРОДКИ».", "\n\nТелевизионная юмористическая программа,\nвыходившая на ТРК «Петербург» с 17 апреля 1993 года.", "ТЯЖЕЛАЯ", "Городок_(телепередача)");
        this.InsertDateIntoPuzzleTable(db, "ТАЙГА", "\nВпервые подробный анализ понятия «ТАЙГА»\n(слово монгольского происхождения)\nдал российский ботаник П. Н. Крылов...", "В одну из экспедиций известного путешественника Арсеньева вместе с ним пошел геолог Гусев.\nОн оказался неприспособленным к жизни в тайге: часто терял ориентировку, отставал от отряда и не имел навыков походной жизни.\nОднажды он, неся алюминиевый котелок, привязал его к котомке так, что крышка болталась и звенела.\nАрсеньев попросил одного из стрелков помочь Гусеву перевязать котелок.\nНо стрелок сказал, что этого делать не следует.\n\nКак он аргументировал свое мнение?", "\n\nЕсли Гусев снова потеряется, то по звону его будет легко найти.", "\n\nКрышка болталась и звенела.", "СРЕДНЯЯ", "Тайга");
        this.InsertDateIntoPuzzleTable(db, "НАУКА", "\nНаучные основы этой науки были заложены\nиспытателем ампелографом\nСимоном де Рохас Клементе...", "Однажды Дионис решил сделать подарок своему любимому другу Ампелу и подвесил его\n(не Ампела, конечно, а подарок)\nна высокий вяз.\nАмпел полез на дерево, не удержался, упал и разбился.\nДионис огорчился и назвал несостоявшийся подарок в честь Ампела.\n\nТеперь скажите, видами и сортами чего занимается наука ампелография?", "\n\nВинограда\n(виноградная лоза называется «АМПЕЛОС»).", "\n\nАмпел - в греческой мифологии сын сатира и нимфы.\nСпутник и возлюбленный Диониса с исмарийских гор.\nСогласно краткому рассказу Овидия, бог подарил Ампелу виноградную гроздь и повесил её высоко на дереве.", "СРЕДНЯЯ", "Ампелография");
        this.InsertDateIntoPuzzleTable(db, "ЛЕГЕНДА", "\nЗапасы воды в Байкале гигантские - 23 тыс. км³\n(около 19% от 123 тыс. км³ всех\nмировых запасов озёрной пресной воды)...", "Бурятская легенда рассказывает о старике Байкале и его 336-ти сыновьях.\n\nА почему их ровно 336?", "\n\nИменно столько рек впадает в Байкал.", "\n\nВ озеро Байкал впадает множество рек.", "ЛЕГКАЯ", "Байкал");
        // 11 - 15
        this.InsertDateIntoPuzzleTable(db, "ЯД", "\nЯд — вещество, приводящее в дозах,\nдаже небольших относительно массы тела,\nк нарушению жизнедеятельности организма...", "Помимо яда, они содержат большое количество белков, углеводов, витаминов и аминокислот.\nПри должной обработке они даже съедобны.\nСчитается также, что особым образом приготовленная настойка из них помогает при суставном ревматизме.\nЕще они эффективны в борьбе с насекомыми, на что намекает и их название.\n\nНазовите их.", "\n\n«МУХОМОРЫ».", "\n\nЭто род микоризообразующих пластинчатых грибов семейства Аманитовые (Amanitaceae).\nВ некоторых системах этот род относят к семейству Плютеевые (Pluteaceae).", "ЛЕГКАЯ", "Яд");
        this.InsertDateIntoPuzzleTable(db, "ДИЕТА", "\nРазработкой и рекомендациями\nдиеты для больного занимается\nдиетология — наука о лечебном питании...", "С недавних пор в Италии стала модной новая диета.\nСуть ее сводится к употреблению продуктов в строго определенной последовательности.\nНачинать есть, например, следует с малины, помидоров или лососины.\nЗатем, после небольшой передышки, можно приналечь на бананы, жареную картошку или булку с маслом.\nА на десерт – зелень, огурцы или плоды киви.\nПо определению из этой диеты выпадают обе «белые смерти» – сахар и соль, а также черная икра и баклажаны.\n\nКак называют такую диету?", "\n\n«СВЕТОФОР».", "\n\nЕсли свет зажегся красный,\nЗначит, двигаться опасно.\nСвет зеленый говорит:\n«Проходите, путь открыт!»\nЖелтый свет - предупрежденье:\nЖди сигнала для движенья.", "СРЕДНЯЯ", "Диета");
        this.InsertDateIntoPuzzleTable(db, "ШКОЛЬНИКИ", "\nПервоначально греческое слово\nσχολή  (школа) означало\n«досуг, свободное времяпровождение»...", "Французские школьники используют удобную рифмованную фразу, которая в русском переводе звучит так: «Как однажды Жак-звонарь городской сломал фонарь».\n\nА что в подобных случаях используют русские школьники?", "\n\n«Каждый охотник желает знать, где сидит фазан»\n– мнемонический ряд цветов.", "\n\nЭто атмосферное, оптическое и метеорологическое явление, наблюдаемое при освещении ярким источником света.", "ЛЕГКАЯ", "Школа");
        this.InsertDateIntoPuzzleTable(db, "ИССКУСТВО", "\nВ масштабах всего общества,\nискусство — особый способ познания\nи отражения действительности...", "Этим «ИСКУССТВОМ» может любоваться каждый, независимо от достатка и места жительства.\nНо большинство предпочитает не иметь этого у себя в квартире.\nПо преданию богиня Афина обрекла на вечное занятие этим мастера, чье искусство сравнялось с искусством богини.\n\nКак мы называем произведения этого «ИСКУССТВА»?", "\n\n«ПАУТИНА».", "\n\nВисит сито,\nНе руками свито.", "ТЯЖЕЛАЯ", "Искусство");
        this.InsertDateIntoPuzzleTable(db, "ФОРУМ", "\nАрхеоло́гия - историческая дисциплина,\n зучающая прошлое человечества\nпо вещественным источникам...", "Посетитель одного из сайтов по черной археологии заметил на форуме, что профессиональный копатель перед тем, как отправиться на промысел, должен перелопатить горы информации, учесть и просчитать всё, вплоть до погодных условий и природных особенностей местности – иными словами, решить для себя 3 задачи.\nВсе эти задачи оканчивались одним словом – «ИСКАТЬ».\n\nВоспроизведите начальные слова этих задач.", "\n\nЧто? Где? Когда?\nКомментарий:\nискателю надо определить, что конкретно он ищет, где будет производить поиски и в какое время эти поиски удобнее будет производить", "\n\nПередача такая есть на телевиденье.\nЗнатоки там играют с совой.", "ТЯЖЕЛАЯ", "Археология");
        // 16 - 20
        this.InsertDateIntoPuzzleTable(db, "ЗАГАДКА", "\nА. Эйнштейн придумал эту задачу в\nпрошлом веке и полагал, что 98% жителей\nЗемли не в состоянии ее решить...", "А. Эйнштейн придумал эту задачу в прошлом веке и полагал, что 98% жителей Земли не в состоянии ее решить.\nПринадлежите ли вы к 2% самых умных людей планеты?\nЗдесь нет никакого фокуса, только чистая логика.\n\n1. Есть 5 домов каждый разного цвета.\n2. В каждом доме живет по одному человеку отличной друг от друга национальности.\n3. Каждый жилец пьет только один определенный напиток, курит определенную марку сигарет и держит определенное животное.\n4. Никто из 5 человек не пьет одинаковые с другими напитки, не курит одинаковые сигареты и не держит одинаковое животное.\n\nВопрос: кому принадлежит рыба?", "\n\nХозяин рыбы - немец.", "1. Англичанин живет в красном доме.\n2. Швед держит собаку.\n3. Датчанин пьет чай.\n4. Зеленый дом стоит слева от белого (считайте, что эти дома стоят рядом - иначе в задаче получаются два решения).\n5. Жилец зеленого дома пьет кофе.\n6. Человек, который курит Pall Mall, держит птицу.\n7. Жилец из среднего дома пьет молоко.\n8. Жилец из желтого дома курит Dunhill.\n9. Норвежец живет в первом доме.\n10. Курильщик Marlboro живет около того, кто держит кошку.\n11. Человек, который содержит лошадь, живет около того, кто курит Dunhill.\n12. Курильщик сигарет Winfield пьет пиво.\n13. Норвежец живет около голубого дома.\n14. Немец курит Rothmans.\n15. Курильщик Marlboro живет по соседству с человеком, который пьет воду.", "ТЯЖЕЛАЯ", "Загадка_Эйнштейна");
        this.InsertDateIntoPuzzleTable(db, "УЧИТЕЛЬ", "\nГоловоломка\nхитрого учитель и\nкласса одаренных детей...", "Как-то в одной школе решили устроить проверку, насколько школьники хорошо учатся.\nПроверка состояла в том, что на уроке присутствует комиссия и наблюдает за тем, как школьники отвечают на поставленные учителем вопросы.\nУчитель обязан спрашивать всех, не только отличников.\nВ одном из классов комиссия была поражена тем, что на каждый вопрос учителя абсолютно весь класс тянул руку чтобы ответить. Учитель спрашивал абсолютно разных по успеваемости учиников и все время получал от них верный ответ.\n\nКак это могло получиться, если учитывать, что класс не был переполнен одаренными учениками?", "\n\nУчитель заранее договорился с учениками о том, что те кто наверняка знают правильный ответ должны тянуть левую руку, те кто не знают или не уверены - правую.\nВ результате, у комиссии возникала иллюзия, что все знают ответ, но учитель знал кого спрашивать и кто наверняка сможет ответить верно", "\n\nВсе кроется в хитрости учителя.", "СРЕДНЯЯ", "Учитель");
        this.InsertDateIntoPuzzleTable(db, "ЭСКИМОСЫ", "\nВ России эскимосы — малочисленная\nэтническая группа, живущая смешанно или\nв близком соседстве с чукчами...", "Эскимосы считают, что он бывает жидким, легким, тяжелым, хрупким, блестящим, и еще насчитывают более двухсот видов его.\n\nО чем идет речь?", "\n\nСнег.", "\n\nВился, вился белый рой,\nСел на землю - стал горой.", "ЛЕГКАЯ", "Снег");
        this.InsertDateIntoPuzzleTable(db, "ЛЕГЕНДА", "\nСогласно местной легенде, жители\nэтой маленькой горной европейской страны\nявляются потомками черного орла...", "Согласно местной легенде, жители этой маленькой горной европейской страны, с преимущественно мусульманским населением, являются потомками большого черного орла.\n\nЧто это за страна, если в переводе ее название означает «Страна орлов»?", "\n\nАлбания.", "\n\nГосударство в западной части Балканского полуострова, на побережье Адриатического и Ионического морей.", "ТЯЖЕЛАЯ", "Албания");
        this.InsertDateIntoPuzzleTable(db, "ТОЛПА", "\nТолпа хаотична,\nхотя и не лишена\nнекоторой организации...", "По-древнегречески толпа — «ОХЛОС».\nА как, согласно одной из версий, древние греки называли отдельно взятого представителя этой толпы?", "\n\nОхломон.", "\n\nОХЛО***.", "ЛЕГКАЯ", "Толпа");
        // 21 - 25
        this.InsertDateIntoPuzzleTable(db, "ФОНАРИК", "\nФонарик - небольшой,\nносимый источник света для\nиндивидуального использования...", "Одна из английских фирм выпускает «вечный» электрический фонарик.\nРеклама сообщает, что ему не вредит погружение на глубину до 150 метров, фонарик не поддается коррозии, его невозможно сломать или разбить.\nНа это изделие дается гарантия сроком на всю жизнь владельца.\nОднако в гарантийном талоне есть примечание: «Фирма не отвечает за последствия нападения на фонарик акулы, медведя и…»\n\nКого?", "\n\nРебенка.", "\n\nВ каждом маленьком ***\nИ мальчишке и девчонке\nЕсть по двести грамм взрывчатки\nИли даже полкило!\nДолжен он бежать и прыгать\nВсе хватать, ногами дрыгать\nА иначе он взорвется, трах-бабах!\nИ нет его!\n\nКаждый новенький ***\nВылезает из пеленок\nИ теряется повсюду\nИ находится везде!\nОн всегда куда-то мчится\nОн ужасно огорчиться,\nЕсли что-нибудь на свете\nВдруг случится без него!", "ЛЕГКАЯ", "Ребёнок");
        this.InsertDateIntoPuzzleTable(db, "ЧИСЛО", "\nГоловоломка редактора\nжурнала «Юность»,\nписателя Бориса Полевого...", "Редактор журнала «Юность», писатель Борис Полевой, редактируя журнал юность, иногда ставил на полях число 22.\n\nЧто этим хотел сказать писатель?", "\n\nПеребор.", "\n\nОчко, также называемое двадцать одно очко, или просто двадцать одно - русский вариант карточной игры блэкджек.", "СРЕДНЯЯ", "Очко_(игра)");
        this.InsertDateIntoPuzzleTable(db, "АЛМАЗ", "\nАлмаз\nпо др.-греч. ἀδάμας\n- «НЕСОКРУШИМЫЙ»...", "Какое правило неукоснительно соблюдается в отношении алмазов, масса которых больше 50 карат?", "\n\nИм дают имена.", "\n\nЭто есть у каждого человека.\nВ паспарте написано.", "ЛЕГКАЯ", "Алмаз");
        this.InsertDateIntoPuzzleTable(db, "ПАРАДОКС", "\nВ самом широком смысле\nпод парадоксом понимают высказывание,\nкоторое расходится с общепринятым мнением...", "Есть 3 ящика: «A», «B» и «С», в одном из них приз в других пусто.\nВы выбираете «A». Ведущий точно знает где приз и сперва открывает заведомо неверный вариант «B», показывая, что он пустой.\nПосле чего спрашивает не хотите ли вы поменять свой выбор?\nТеперь  у вас есть возможность остаться при своем варианте «А», либо сменить его на «С».\n\nСтоит ли менять свой выбор и почему?", "\n\nДа, всегда стоит менять выбор.\nИзначально у Вас 1/3 шансов угадать приз или 33.3%.\nВыбор неправильного ящика составляет 2/3 шансов или 66.7%.\nКогда Вы меняете вариант у Вас становится в два раза больше шансов получить приз.", "\n\nПарадокс Монти Холла - одна из известных задач теории вероятностей, решение которой, на первый взгляд, противоречит здравому смыслу.", "СРЕДНЯЯ", "Парадокс_Монти_Холла");
        this.InsertDateIntoPuzzleTable(db, "СЧЕТ", "\nРадио, телевизор, магнитофон.\nКто не слушает музыку?\nВыйди вон!..", "Решая эту задачку, постарайтесь все вычисления делать быстро и в уме, ничего не пишите и не используйте калькулятор, и результат вас удивит.\nВозьмите 1000.\nПрибавьте 40.\nПрибавьте еще тысячу.\nПрибавьте 30.\nЕще 1000.\nПлюс 20.\nПлюс 1000.\nИ плюс 10.\n\nЧто получилось?", "\n\nОтвет 5000?\nНеверно.\nПравильный ответ 4100.\nЕсли не верите, пересчитайте на калькуляторе.", "\n\nОтвет 5000?\nПосчитай еще раз.", "СРЕДНЯЯ", "Устный_счёт");
        // last
        this.InsertDateIntoPuzzleTable(db, "ОБНОВЛЕНИЕ", "\nЭТО ЕЩЕ НЕ КОНЕЦ!\nОбновление уже скоро.\nЖдите...", "Ой!\nКажется, это была последняя загадка.\nНичего страшного!\nПросто подождите несколько дней, и в базу будут добавлены новые головоломки.", "\n\nБольше ничего нет!", "\n\nБольше ничего нет!", "", "");






        /*

        // 26 - 30
        this.InsertDateIntoPuzzleTable(db, "ВОЖДЬ", "ЗАГЛУШКА", "Один путешественник был захвачен племенем, вождь которого решил, что тот должен умереть.\nВождь был очень мудрым человеком и дал путешественнику право выбора.\nПутешественник должен был сказать одну фразу.\nЕсли фраза оказывалась правдивой, то его сбрасывали с высокой скалы.\nЕсли она была лживой, то путешественника должны были растерзать львы».\nНо путешественник сказал такую фразу, после которой его отпустили.\nКакую?", "\n\nОн сказал:\n«Меня растерзают львы.\nТеперь, если бы вождь отдал его на растерзание львам, то эта фраза оказалась бы правдивой, и путешественника должны были бы сбросить со скалы.\nНо если его сбросят со скалы, то фраза окажется лживой.\nВождь признал, что единственно правильным решением будет отпустить путешественника.", "\n\nЗАГЛУШКА", "***", "");
        this.InsertDateIntoPuzzleTable(db, "МОНЕТЫ", "ЗАГЛУШКА", "Имеется набор из 1999 монет.\nИзвестно, что 1410 из них - фальшивые.\nФальшивая монета по весу отличается на 1 г от подлинной, причем одни фальшивые монеты могут быть легче, а другие тяжелее подлинных.\nУ нас есть чашечные весы, которые умеют показывать разницу в весе.\nКак за одно взвешивание определить подлинность любой монеты из набора?", "\n\nВзвешиваем все монеты кроме этой и смотрим на разность в весе.\nОбозначим вес нормальной монеты как N, тогда все монеты будут весить либо\n1998 * N + 2x (где 0 =< 705) - в данном случае наша монета настоящая, либо\n1998 * N + (2x - 1) (где 0=<705) - в этом случае наша монета фальшивая.", "\n\nЗАГЛУШКА", "**", "");
        this.InsertDateIntoPuzzleTable(db, "ГОРОДА", "ЗАГЛУШКА", "Есть два близ лежащих города, в одном все лжецы, а в другом правдолюбы.\nИ те и другие приезжают друг к другу в гости.\nКакой нужно поставить единственный вопрос прохожему, что бы узнать в каком вы находитесь городе?", "\n\nНадо спросить:\n«Вы здесь в гостях?»\nЕсли ответ «ДА», то вы в городе лжецов.\nА если ответ «НЕТ», то в городе правдолюбов.", "\n\nЗАГЛУШКА", "**", "");
        this.InsertDateIntoPuzzleTable(db, "НАКАЗАНИЕ", "ЗАГЛУШКА", "В 1926 и 1948 годах Германия была наказана за развязывание войн так же, как когда-то была наказана Спарта.\n\nЧто это за наказание?", "\n\nНемецким спортсменам было запрещено участвовать в Олимпийских играх.", "\n\nЗАГЛУШКА", "*", "");
        this.InsertDateIntoPuzzleTable(db, "КОРОЛЬ", "ЗАГЛУШКА", "Известно, что великий Пеле неоднократно выступал в качестве певца.\nИнтересно, что первая грампластинка с записью песен в его исполнении была выпущена в Советском Союзе.\nБразильские газеты сочли это национальным позором, ударом по престижу национальной журналистики.\nОдна из газет писала:\n«Первую пластинку Короля издали не мы, а русские.\nДа еще и умудрились…».\n\nКакое обстоятельство особо возмутило бразильскую прессу?", "\n\n«Да еще умудрились не заплатить ему ни сентаво».", "\n\nЗАГЛУШКА", "***", "");
        // 31 - 35
        this.InsertDateIntoPuzzleTable(db, "ЧИСЛА", "\nОПИСАНИЕ", "Два по 11, четыре по 7 и еще 5, а всего в итоге 6.\n\nО чем речь?", "\n\nПонедельник 11 букв.\nВторник 7 букв.\nСреда 5 букв.\nЧетверг 7 букв.\nПятница 7 букв.\nСуббота 7 букв.\nВоскресенье 11 букв.\nПолучаем неделя - 6 букв.", "\n\nПОДСКАЗКА", "**", "");
        this.InsertDateIntoPuzzleTable(db, "СЛОВО", "\nОПИСАНИЕ", "Английский ученый-психолог Дэвид Льюис утверждает, что это безопасно лишь для женщин, тогда как для мужчин может стать источником опасных болезней.\nПроведенные исследования показали, что лишь у четверти женщин наблюдались какие-либо незначительные отклонения, например, сердцебиение.\nМужчины же, наоборот, крайне отрицательно отреагировали на это: у них участился пульс, стала проявляться аритмия, резко подскочило кровяное давление.\n\nНазовите это английским словом, которое относительно недавно проникло и в русский язык.", "\n\n«ШОПИНГ».", "\n\nПОДСКАЗКА", "СРЕДНЯЯ", "Шопинг");
        this.InsertDateIntoPuzzleTable(db, "БЕДА", "\nПодсказка.\nУ России две беды\n- дураки и дороги...", "Надписи «Я тебя люблю!»,\n«Спасибо, что ты есть!»,\n«Ты моё счастье!»\nодин блогер объясняет тем, что хороший ОН – редкость, и ЕГО нельзя не любить.\nНазовите ЕГО.", "\n\nАсфальт.", "\n\nПодсказка в описании.", "ЛЕГКАЯ", "Асфальт");
        this.InsertDateIntoPuzzleTable(db, "ПРАВИЛО", "\nОПИСАНИЕ", "Какое правило неукоснительно соблюдается в отношении алмазов, масса которых больше 50 каратов?", "\n\nИм дают имена.", "\n\nПОДСКАЗКА", "ЛЕГКАЯ", "Карат");
        this.InsertDateIntoPuzzleTable(db, "АРМИЯ", "\nОПИСАНИЕ", "В русскую армию «забирали», как известно, не всех крестьян.\nРекрутов тщательно выбирали.\nНапример, у пригодного к службе рекрута значение одного из параметров должно было составлять не менее 30.\nА чему равно значение этого параметра у здорового взрослого человека?", "\n\n32\n(количество зубов).", "\n\nПОДСКАЗКА", "СРЕДНЯЯ", "Зуб_(биология)");
        // 36 - 40
        this.InsertDateIntoPuzzleTable(db, "РИФМА", "\nОПИСАНИЕ", "Французские школьники используют удобную рифмованную фразу, которая в русском переводе звучит так:\n«Как однажды Жак-звонарь городской сломал фонарь».\n\nА что в подобных случаях используют русские школьники?", "\n\n«Каждый охотник желает знать, где сидит фазан»\n– мнемонический ряд цветов.", "\n\nПОДСКАЗКА", "ЛЕГКАЯ", "Видимое_излучение");
        this.InsertDateIntoPuzzleTable(db, "ЭТО", "\nОПИСАНИЕ", "Английский ученый-психолог Дэвид Льюис утверждает, что «ЭТО» безопасно лишь для женщин, тогда как для мужчин может стать источником опасных болезней.\nПроведенные исследования показали, что лишь у четверти женщин наблюдались какие-либо незначительные отклонения, например, сердцебиение.\nМужчины же, наоборот, крайне отрицательно отреагировали на «ЭТО»: у них участился пульс, стала проявляться аритмия, резко подскочило кровяное давление.\n\nНазовите «ЭТО» английским словом, которое относительно недавно проникло и в русский язык.", "\n\n«ШОПИНГ».", "\n\nВы уже отгадали это слово в головоломке №32.\nВерно?", "ЛЕГКАЯ", "Шопинг");
        this.InsertDateIntoPuzzleTable(db, "ПАПИРУС", "\nОПИСАНИЕ", "В 1858 году Шотландский коллекционер Генри Райнд приобрел древнеегипетский папирус подписанный именем «АХМЕС».\nЭтот свиток папируса, шириной 33 см и длинной 5,25 метров, является копией ещё более древнего математического руководства, относящегося ко времени фараона Аменемхета III.\nВот одна задача из этого древнейшего из математических сборников:\n«Сто мер зерна надо поделить между пятью работниками так, чтобы второй получил настолько больше, чем первый, насколько третий больше, чем второй, и на столько же, насколько четвёртый больше, чем третий, и на столько же, насколько пятый больше, чем четвёртый».\n\nСколько мер зерна должен получить каждый, если первый и второй работники вместе получат зерна в семь раз меньше, чем остальные три работника?", "\n\nДля решения задачи составим два равенства.\n5w + 10d = 100;\n7*(2w + d) = 3w + 9d,\nгде w – количество зерна для первого работника,\nd – разница в количестве зерна между двумя (следующими по порядку) работниками.\n\nОтвет:\nпервому работнику 10/6 мер зерна,\nвторому работнику 65/6 мер зерна,\nтретьему работнику 120/6 (20) мер зерна,\nчетвертому работнику 175/6 мер зерна,\nпятому работнику 230/6 мер зерна.", "\n\nПОДСКАЗКА", "ТЯЖЕЛАЯ", "Аменемхет_III");
        this.InsertDateIntoPuzzleTable(db, "ИОТА", "ОПИСАНИЕ", "Древние греки пользовались десятичной системой счисления.\nЧисла записывались с помощью букв греческого алфавита.\nКогда-то их было 27.\nПервые девять букв заменяли собой цифры.\nСледующие девять букв – десятки, и наконец последние девять букв – сотни.\nТаким образом можно было записать любое число от 1 до 999.\nНапример, поскольку буква «ИОТА» означала 10, а буква «ДЕЛЬТА» – 4, то «ИОТА ДЕЛЬТА» – это 14.\n\nА какое число обозначалось буквосочетанием «ДЕЛЬТА ИОТА»?", "\n\nТоже 14.\nЭто была непозиционная система счисления.", "\n\nПОДСКАЗКА", "ЛЕГКАЯ", "Система_счисления");
        this.InsertDateIntoPuzzleTable(db, "1 9 9 6", "ОПИСАНИЕ", "Пользуясь цифрами: «1», «9», «9» и «6» и знаками арифметических операций: «+», «-», «х», «:», знаком извлечения корня и скобками, получите следющие результаты:\n29, 32, 35, 38, 70, 73, 76, 77, 100 и 1000.\nВсе четыре цифры должны быть использованны только в заданном порядке, каждая цифра может быть использованна только один раз, и нельзя переворачивать цифры вверх ногами.", "\n\n29 = -1+[9]+[[9]6]\n32 = (1:[9])x96\n35 = -19+(9x6)\n38 = 19:[9]x6\n70 = (1+[9])[9]+6\n73 = 19+(9x6)\n76 = 1+(9x9)-6\n77 = -19+96\n77 = -19+96\n100 = 1+[9]+96\n1000 = (1+9)(9-6)", "\n\nПОДСКАЗКА", "СРЕДНЯЯ", "");
        // 41 - 45
        this.InsertDateIntoPuzzleTable(db, "ХРАМ", "ОПИСАНИЕ", "В старинном индийском храме восседали три богини: Правда, Ложь и Мудрость.\nПравда говорит только правду, Ложь всегда лжёт, а Мудрость может сказать правду или солгать.\nПаломник спросил у богини слева: «Кто сидит рядом с тобой?»\n«ПРАВДА», - ответила та.\nТогда он спросил у средней: «Кто ты?»\n«МУДРОСТЬ», - отвечала она.\nНаконец он спросил у той, что справа: «Кто твоя соседка?»\n«ЛОЖЬ», - ответила богиня.\nИ после этого паломник точно знал, кто есть кто.\n\nТак ктоже из них кто?", "\n\nОбозначим каждую богиню определённой буквой.\nВ нашем распоряжении следующие утверждения:\n1. А говорит, что В – Правда.\n2. В говорит, что она Мудрость.\n3. С говорит, что В – Ложь.\nПервое предложение подсказывает нам, что А не Правда.\nВторое предложение также было сказано не Правдой, следовательно Правда – С.\nОткуда ясно, что последнее предложение верно: В – Ложь, а А – Мудрость.", "\n\nПОДСКАЗКА", "СРЕДНЯЯ", "Истина");

        */


        //this.InsertDateIntoPuzzleTable(db, "НАЗВАНИЕ", "ОПИСАНИЕ", "ВОПРОС", "\n\nОТВЕТ", "\n\nПОДСКАЗКА", "*", "");

    }









    // update state value
    public void UpdateSettingsState(SQLiteDatabase db, long id, String state) {
        contentValues = new ContentValues();
        contentValues.put(COLUMN_SETTINGS_LASTINDEX, state);

        db.update(TABLE_NAME_SETTINGS, contentValues, "id=" + id, null);
    }

    public void UpdateSettingsRate(SQLiteDatabase db, long id, String state) {
        contentValues = new ContentValues();
        contentValues.put(COLUMN_SETTINGS_ISRATE, state);

        db.update(TABLE_NAME_SETTINGS, contentValues, "id=" + id, null);
    }

    public void UpdateSettingsToNextRate(SQLiteDatabase db, long id, String state) {
        contentValues = new ContentValues();
        contentValues.put(COLUMN_SETTINGS_TONEXTRATE, state);

        db.update(TABLE_NAME_SETTINGS, contentValues, "id=" + id, null);
    }

    public void UpdateSettingsAppStart(SQLiteDatabase db, long id, String state) {
        contentValues = new ContentValues();
        contentValues.put(COLUMN_SETTINGS_APPSTART, state);

        db.update(TABLE_NAME_SETTINGS, contentValues, "id=" + id, null);
    }

    public void UpdateSettingsToUp(SQLiteDatabase db, long id, boolean toUp) {
        contentValues = new ContentValues();

        if (toUp) contentValues.put(COLUMN_SETTINGS_TOUP, "true");
        else contentValues.put(COLUMN_SETTINGS_TOUP, "false");

        db.update(TABLE_NAME_SETTINGS, contentValues, "id=" + id, null);
    }

    public void UpdateSettingsDoubleClick(SQLiteDatabase db, long id, boolean doubleClick) {
        contentValues = new ContentValues();

        if (doubleClick) contentValues.put(COLUMN_SETTINGS_DOUBLECLICK, "true");
        else contentValues.put(COLUMN_SETTINGS_DOUBLECLICK, "false");

        db.update(TABLE_NAME_SETTINGS, contentValues, "id=" + id, null);
    }

    public void UpdateSettingsMoveToLast(SQLiteDatabase db, long id, boolean moveToLast) {
        contentValues = new ContentValues();

        if (moveToLast) contentValues.put(COLUMN_SETTINGS_MOVETOLAST, "true");
        else contentValues.put(COLUMN_SETTINGS_MOVETOLAST, "false");

        db.update(TABLE_NAME_SETTINGS, contentValues, "id=" + id, null);
    }

    public void UpdateSettingsTextAlign(SQLiteDatabase db, long id, boolean textAlign) {
        contentValues = new ContentValues();

        if (textAlign) contentValues.put(COLUMN_SETTINGS_TEXTALIGN, "true");
        else contentValues.put(COLUMN_SETTINGS_TEXTALIGN, "false");

        db.update(TABLE_NAME_SETTINGS, contentValues, "id=" + id, null);
    }

    public void UpdateSettingsTextSize(SQLiteDatabase db, long id, boolean textSize) {
        contentValues = new ContentValues();

        if (textSize) contentValues.put(COLUMN_SETTINGS_TEXTSIZE, "true");
        else contentValues.put(COLUMN_SETTINGS_TEXTSIZE, "false");

        db.update(TABLE_NAME_SETTINGS, contentValues, "id=" + id, null);
    }






    public void UpdatePuzzleFavorite(SQLiteDatabase db, long id, String state) {
        contentValues = new ContentValues();
        contentValues.put(COLUMN_FAVORITE_FAVORITE, state);
        db.update(TABLE_NAME_FAVORITE, contentValues, "id=" + id, null);
    }

    public void UpdatePuzzleState(SQLiteDatabase db, long id, String state) {
        contentValues = new ContentValues();
        contentValues.put(COLUMN_FAVORITE_STATE, state);
        db.update(TABLE_NAME_FAVORITE, contentValues, "id=" + id, null);
    }

    public void onDowngrade(SQLiteDatabase db, int oldVersion, int newVersion) {
        db.execSQL("DROP TABLE IF EXISTS " + TABLE_NAME_PUZZLE);

        db.execSQL("CREATE TABLE "
                + TABLE_NAME_PUZZLE     + " ("
                + COLUMN_ID             + " INTEGER PRIMARY KEY AUTOINCREMENT,"
                + COLUMN_HEADER         + " TEXT, "
                + COLUMN_DESCRIPTION    + " TEXT, "
                + COLUMN_TEXT           + " TEXT, "
                + COLUMN_ADVICE         + " TEXT, "
                + COLUMN_ANSWER         + " TEXT, "
                + COLUMN_COMPLEXITY     + " TEXT, "
                + COLUMN_WIKI           + " TEXT"
                + ");");
    }

    public void DropSettingsTable(SQLiteDatabase db) {
        db.execSQL("DROP TABLE IF EXISTS " + TABLE_NAME_SETTINGS);

        db.execSQL("CREATE TABLE "
                + TABLE_NAME_SETTINGS           + " ("
                + COLUMN_SETTINGS_ID            + " INTEGER PRIMARY KEY AUTOINCREMENT,"
                + COLUMN_SETTINGS_LASTINDEX     + " INTEGER, "
                + COLUMN_SETTINGS_APPSTART      + " INTEGER, "
                + COLUMN_SETTINGS_DBINDEX       + " INTEGER, "
                + COLUMN_SETTINGS_TOUP          + " TEXT, "
                + COLUMN_SETTINGS_DOUBLECLICK   + " TEXT, "
                + COLUMN_SETTINGS_MOVETOLAST    + " TEXT, "
                + COLUMN_SETTINGS_ISRATE        + " TEXT, "
                + COLUMN_SETTINGS_TONEXTRATE    + " INTEGER, "
                + COLUMN_SETTINGS_TEXTALIGN     + " TEXT, "
                + COLUMN_SETTINGS_TEXTSIZE      + " TEXT"
                + ");");



        InitializationSettingsTable(db);
    }

    public void DropFavoriteTable(SQLiteDatabase db) {
        db.execSQL("DROP TABLE IF EXISTS " + TABLE_NAME_FAVORITE);

        db.execSQL("CREATE TABLE "
                + TABLE_NAME_FAVORITE       + " ("
                + COLUMN_FAVORITE_ID        + " INTEGER PRIMARY KEY AUTOINCREMENT,"
                + COLUMN_FAVORITE_FAVORITE  + " TEXT, "
                + COLUMN_FAVORITE_STATE     + " TEXT"
                + ");");

        InitializationFavoriteTable(db);
    }

    public void DropPuzzleTable(SQLiteDatabase db) {
        db.execSQL("DROP TABLE IF EXISTS " + TABLE_NAME_PUZZLE);

        db.execSQL("CREATE TABLE "
                + TABLE_NAME_PUZZLE     + " ("
                + COLUMN_ID             + " INTEGER PRIMARY KEY AUTOINCREMENT,"
                + COLUMN_HEADER         + " TEXT, "
                + COLUMN_DESCRIPTION    + " TEXT, "
                + COLUMN_TEXT           + " TEXT, "
                + COLUMN_ADVICE         + " TEXT, "
                + COLUMN_ANSWER         + " TEXT, "
                + COLUMN_COMPLEXITY     + " TEXT, "
                + COLUMN_WIKI           + " TEXT"
                + ");");

        InitializationPuzzleTable(db);
    }

    @Override
    public void onCreate(SQLiteDatabase db) {
        db.execSQL("CREATE TABLE "
                + TABLE_NAME_PUZZLE     + " ("
                + COLUMN_ID             + " INTEGER PRIMARY KEY AUTOINCREMENT,"
                + COLUMN_HEADER         + " TEXT, "
                + COLUMN_DESCRIPTION    + " TEXT, "
                + COLUMN_TEXT           + " TEXT, "
                + COLUMN_ADVICE         + " TEXT, "
                + COLUMN_ANSWER         + " TEXT, "
                + COLUMN_COMPLEXITY     + " TEXT, "
                + COLUMN_WIKI           + " TEXT"
                + ");");

        db.execSQL("CREATE TABLE "
                + TABLE_NAME_SETTINGS           + " ("
                + COLUMN_SETTINGS_ID            + " INTEGER PRIMARY KEY AUTOINCREMENT,"
                + COLUMN_SETTINGS_LASTINDEX     + " INTEGER, "
                + COLUMN_SETTINGS_APPSTART      + " INTEGER, "
                + COLUMN_SETTINGS_DBINDEX       + " INTEGER, "
                + COLUMN_SETTINGS_TOUP          + " TEXT, "
                + COLUMN_SETTINGS_DOUBLECLICK   + " TEXT, "
                + COLUMN_SETTINGS_MOVETOLAST    + " TEXT, "
                + COLUMN_SETTINGS_ISRATE        + " TEXT, "
                + COLUMN_SETTINGS_TONEXTRATE    + " INTEGER, "
                + COLUMN_SETTINGS_TEXTALIGN     + " TEXT, "
                + COLUMN_SETTINGS_TEXTSIZE      + " TEXT"
                + ");");

        db.execSQL("CREATE TABLE "
                + TABLE_NAME_FAVORITE       + " ("
                + COLUMN_FAVORITE_ID        + " INTEGER PRIMARY KEY AUTOINCREMENT,"
                + COLUMN_FAVORITE_FAVORITE  + " TEXT, "
                + COLUMN_FAVORITE_STATE     + " TEXT"
                + ");");

        this.InitializationPuzzleTable(db);
        this.InitializationSettingsTable(db);
        this.InitializationFavoriteTable(db);
    }

    @Override
    public void onUpgrade(SQLiteDatabase db, int oldVersion,  int newVersion) {
        if (oldVersion < newVersion) {
            db.execSQL("DROP TABLE IF EXISTS " + TABLE_NAME_PUZZLE);

            db.execSQL("UPDATE " + TABLE_NAME_SETTINGS + " SET " + COLUMN_SETTINGS_DBINDEX + " = " + newVersion + ";");

            db.execSQL("CREATE TABLE "
                    + TABLE_NAME_PUZZLE     + " ("
                    + COLUMN_ID             + " INTEGER PRIMARY KEY AUTOINCREMENT,"
                    + COLUMN_HEADER         + " TEXT, "
                    + COLUMN_DESCRIPTION    + " TEXT, "
                    + COLUMN_TEXT           + " TEXT, "
                    + COLUMN_ADVICE         + " TEXT, "
                    + COLUMN_ANSWER         + " TEXT, "
                    + COLUMN_COMPLEXITY     + " TEXT, "
                    + COLUMN_WIKI           + " TEXT"
                    + ");");
            this.InitializationPuzzleTable(db);
        }
    }

}